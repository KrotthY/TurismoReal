# Generated by Django 4.1.3 on 2023-09-13 19:21

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CheckOut',
            fields=[
                ('id_check_out', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_check_out', models.DateField()),
                ('costos_reparacion', models.IntegerField()),
                ('firma_funcionario', models.CharField(max_length=1000)),
                ('multas_id', models.IntegerField(null=True)),
                ('reserva_id_reserva', models.IntegerField()),
                ('estado', models.CharField(default='activo', max_length=20)),
            ],
            options={
                'db_table': 'checkout',
            },
        ),
        migrations.CreateModel(
            name='Direc',
            fields=[
                ('id_direc', models.AutoField(primary_key=True, serialize=False)),
                ('calle', models.CharField(max_length=50)),
                ('numero', models.CharField(max_length=50)),
                ('ndpto', models.CharField(max_length=6)),
                ('ciudad', models.CharField(max_length=25)),
                ('region', models.CharField(max_length=25)),
                ('pais', models.CharField(max_length=25)),
                ('estado', models.CharField(default='activo', max_length=20)),
            ],
            options={
                'db_table': 'direc',
            },
        ),
        migrations.CreateModel(
            name='Dpto',
            fields=[
                ('id_dpto', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=20, unique=True)),
                ('descripcion', models.CharField(max_length=250)),
                ('tarifa_diaria', models.IntegerField()),
                ('estado', models.CharField(default='activo', max_length=20)),
                ('direc', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dptos', to='TurismoRealApp.direc')),
            ],
            options={
                'db_table': 'dpto',
            },
        ),
        migrations.CreateModel(
            name='Equipamiento',
            fields=[
                ('id_equipamiento', models.AutoField(primary_key=True, serialize=False)),
                ('objeto', models.CharField(max_length=250)),
                ('valor', models.IntegerField()),
                ('estado', models.CharField(default='activo', max_length=20)),
            ],
            options={
                'db_table': 'equipamiento',
            },
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True)),
                ('estado', models.CharField(default='activo', max_length=20)),
            ],
            options={
                'db_table': 'servicio',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rut', models.CharField(max_length=20, unique=True)),
                ('telefono', models.CharField(max_length=20)),
                ('estado', models.CharField(default='activo', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'usuario',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Traslado',
            fields=[
                ('id_traslado', models.AutoField(primary_key=True, serialize=False)),
                ('origen', models.CharField(max_length=25)),
                ('destino', models.CharField(max_length=25)),
                ('valor', models.IntegerField()),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
                ('estado', models.CharField(default='activo', max_length=20)),
                ('customUser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='traslados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'traslado',
            },
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id_tour', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=25, unique=True)),
                ('descripcion', models.CharField(max_length=100)),
                ('duracion', models.IntegerField()),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
                ('valor', models.IntegerField()),
                ('estado', models.CharField(default='activo', max_length=20)),
                ('customUser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tours', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tour',
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id_reserva', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('monto_total', models.IntegerField()),
                ('cantidad_personas', models.IntegerField()),
                ('estado', models.CharField(default='activo', max_length=20)),
                ('customUser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservas', to=settings.AUTH_USER_MODEL)),
                ('dpto', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='TurismoRealApp.dpto')),
            ],
            options={
                'db_table': 'reserva',
            },
        ),
        migrations.CreateModel(
            name='ReporteGanancias',
            fields=[
                ('id_reporte', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_generacion', models.DateField()),
                ('tipo', models.CharField(max_length=50)),
                ('ingresos', models.IntegerField()),
                ('gastos', models.IntegerField()),
                ('ganancias', models.IntegerField()),
                ('estado', models.CharField(default='activo', max_length=20)),
                ('dpto', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reportes', to='TurismoRealApp.dpto')),
            ],
            options={
                'db_table': 'reporteganancias',
            },
        ),
        migrations.CreateModel(
            name='Multa',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=1000)),
                ('monto', models.IntegerField()),
                ('estado', models.CharField(default='activo', max_length=20)),
                ('check_out', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='multas', to='TurismoRealApp.checkout')),
            ],
            options={
                'db_table': 'multa',
            },
        ),
        migrations.CreateModel(
            name='Mantencion',
            fields=[
                ('id_mantencion', models.AutoField(primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=250)),
                ('fecha_programada', models.DateField()),
                ('estado', models.CharField(default='activo', max_length=20)),
                ('dpto', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mantenciones', to='TurismoRealApp.dpto')),
            ],
            options={
                'db_table': 'mantencion',
            },
        ),
        migrations.CreateModel(
            name='DptoImagen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagen', models.ImageField(upload_to='dpto_imagenes/')),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imagenes', to='TurismoRealApp.dpto')),
            ],
            options={
                'db_table': 'DptoImagen',
            },
        ),
        migrations.AddField(
            model_name='dpto',
            name='equipamiento',
            field=models.ManyToManyField(related_name='dptos', to='TurismoRealApp.equipamiento'),
        ),
        migrations.AddField(
            model_name='dpto',
            name='servicios',
            field=models.ManyToManyField(related_name='dptos', to='TurismoRealApp.servicio'),
        ),
        migrations.AddField(
            model_name='checkout',
            name='reserva',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='check_outs', to='TurismoRealApp.reserva'),
        ),
        migrations.CreateModel(
            name='CheckIn',
            fields=[
                ('id_check_in', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_check_in', models.DateField()),
                ('pago_restante', models.IntegerField()),
                ('firma_cliente', models.CharField(max_length=1000)),
                ('estado', models.CharField(default='activo', max_length=20)),
                ('reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='check_ins', to='TurismoRealApp.reserva')),
            ],
            options={
                'db_table': 'checkin',
            },
        ),
    ]
